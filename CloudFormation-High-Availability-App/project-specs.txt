There will be two parts to this project:
 -You'll first develop a diagram that you can present as part of your portfolio and as a visual aid to understand the CloudFormation script.
 -The second part is to interpret the instructions as well as your own diagram and create a matching CloudFormation script.

The Problem:
Your company is creating an Instagram clone called Udagram. Developers pushed the latest version of their code in a zip file located in a public S3 Bucket.

You have been tasked with deploying the application, along with the necessary supporting software into its matching infrastructure.

This needs to be done in an automated fashion so that the infrastructure can be discarded as soon as the testing team finishes their tests and gathers their results.

REQUIREMENTS

Launch Configuration 
-4 Servers (2 in each private subnets)
-used in auto-scaling group

-Server Spec:
 -Ubuntu 18, 4GB RAM, 2vCPU, 100GB of disk

 Security:
 -IAM Role to allow insances to use S3 Service.
 -App runs at port 80
 -Deploy app in private subnet with load balancer located in a public subnet

 Outputs:
 -Load Balancer's URL
 -add http:// in front of the dns name 

Resources
 -LoadBalancerLaunch Configuration
 -AutoScaling group a health check
 -Security groups and a Listener
 -Target Group

LoadBalancer
 -TargetGroup: The auto-scaling group needs to have a property that associates it 
with a target group. The Load Balancer will have a Listener rule associated with the same target group
 -Health Check and Listener: Port 80 should be used in Security groups, health checks and listeners associated with the load balancer

AutoScaling
 -Subnets: Private subnets for auto scaling
 -Machines: 10GB Disk min t3.small or better
 -SSH Key: There shouldn’t be a ‘keyname’ property in the launch config

Bonus
 -Output: Any values in the output section are a bonus
 -Bastion Host: Any resource of type AWS::EC2::Instance, optional, but nice to have.
 -Students can deploy Windows Servers instead of Linux and use PowerShell scripts to showcase their Windows management skills.
 -Students can use AWS Parameter Store to save sensitive data, such as credentials to showcase their attention to security.
 -Students can use CloudWatch Alarms and CloudWatch custom metrics to showcase their performance and monitoring skills.